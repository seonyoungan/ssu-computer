### 1-1. 정적 웹페이지와 동적 웹페이지의 차이점은?
- 정적 웹페이지는 컴퓨터에 저장된 텍스트가 그대로가 보여지는 것을 말하고, 동적 웹페이지는 컴퓨터에 저장된 내용이 다른 변수로 가공처리되어 보여지는 것을 말한다.

### 1-2. 웹프로그래밍 언어 JSP에 대해 설명하시오.
- JSP는 프로그래밍 언어로, 자바를 기반으로하는 서버측 웹프로그래밍 언어이다. 유지관리가 용이하고 빠른 개발이 가능해 코드길이를 줄일 수 있어 좋다.

### 1-3. JSP페이지의 처리과정
- 번역 -> 컴파일 -> 로딩 및 초기화 -> 실행 -> 소멸된다. (즉, 생성부터 파괴까지의 단계가 있다.)

--- 

### 2-1. 스크립트 태그 3가지 종류에 대해 간단히 설명하시오.
- 선언문태그<%!...;%>, 스크립틀릿태그<%...;%>, 표현문태그<%=...%>가 있다.
- 선언문태그는 변수나 메소드를 정의하는 태그이다. 주로 임의의 위치에 올 수 있고, 스크립틀릿태그보다 뒤에 올 수도 있다. 선언문 태그에서 선언된 변수나 메소드는 전역변수의 역할을 한다. 세미콜론으로 구문을 구분한다.
- 스크립틀릿 태그는 자바로직코드를 작성하는 태그이다. out객체 없이 HTML응답을 만들 수 있다. 변수만 선언할 수 있다. 세미콜론으로 구문을 구분한다.
- 표현문태그는 선언문태그와 스크립틀릿태그에서 선언한 메소드와 변수를 출력한다. out객체를 이용하여화면에 보여줄 수 있다.


### 2-2. 선언문태그와 스크립틀릿 태그의 차이점에 대해 말하시오. 
- 서블릿프로그램으로 변환시 _jspService()에서 선언문태그는 외부에 위치하고, 스크립틀릿태그는 내부에 위치한다.
또한 선언문태그는 변수, 메소드 선언이 가능하고 스크립틀릿 태그는 변수만 선언이 가능하다는 점도 다른점이다. 

### 3-3. JSP의 주석표기법은?
- <%-- ... --%>

--- 

### 3-1. 디렉티브 태그의 세가지 유형에 대해 간단히 설명하시오.
- 디렉티브 태그는 page<%@ page %> , include<%@ include %>, taglib<%@ taglib>가 있다.
- page는 JSP페이지의 정보를 설정하는 것이다. 속성애는, language, bufferSize, contentType, pageEncoding, import, session, errorPage 등이 있다.
- include는 다른 외부파일을포함시키는 것으로, 텍스트, HTML, JSP파일만 가능하다. 어디서든 선언할 수 있고, 재사용되는코드나 저작권 관련 코드를 작성시 사용하여 모듈화 시키는 데에 유용하다.
- taglib는 JSP페이지에서 사용할 태그 라이브러리를 가져오는 것으로, prefix와 uri를 꼭 함께 사용해야 한다.

### 3-2. JSP페이지가 사용할 자바 클래스를 설정하기 위한 page디렉티브 태그의 속성은 무엇인가.
- import

### 3-3. JSP페이지 특정영역에 외부파일 내용을 포함하는 디렉티브 태그는 무엇인가.
- include이다. 참고로 모듈화에 용이하고 재사용성을 높인다. 텍스트, HTML, JSP 페이지만 가져올 수 있당.

--- 

### 4-1. forward와 include 액션 태그의 차이점을 간단히 서술하시오.
- forward는 JSP페이지에서 forward를 만나면 그전의 출력 버퍼들에 저장되었던 내용을 삭제하고, 액션태그에 설정된 페이지로 프로그램 제어가 이동한다. include 액션태그는 flush 속성값은 해당파일로 이동시 지금까지 출력 버퍼의 저장된 결과를 처리한다.

### 4-2. include 액션태그와 include 디랙티브 차이점을 설명하시오.
- include액션태그는 요청시 자원처리 / 별도의 요청 처리흐름을 이동 / request 기본내장객체, param 액션태그를 이용해 인자를 전달 / 화면 레이아웃의 일부분을 모듈화할 때 사용 / 동적 페이지에서 사용
- include디렉티브 태그는 번역시 자원 처리 / 현재 페이지 내에 삽입 / 페이지 내에서 변수를 선언한 후 사용 / 저작권코드,재사용코드가 있을 경우 사용 / 정적 페이지에서 사용

### 4-3. 자바빈즈 작성하는 기법을 예를 들어 설명하시오. 

- java.io.Serializable인터페이스를 구현한다. (옵션)
- 인수가 없는 기본생성자가 있어야 한다.
- 모든 멤버변수인 프로퍼티는 private 접근지정자로설정해야한다.
- 모든 멤버변수인 프로퍼티는 Getter/Setter() 메소드가 존재해야 한다.

```java
pakage com.dto;
import java.io.Serializable;

public class MemberBean implements java.io.Serializable{ //1.인터페이스 구현
	private int id;
	private String name; // 3. 멤버변수 private로 설정하
	private MemberBean(){ //2. 인수가 없는 기본생성자  
	} 
	
	
	public int getId(){  //4. getter/setter() 메소드 존재하도록
		return id;
	}
	
	public void setId(int id){
		this.id=id;
	}
}
```

--- 

